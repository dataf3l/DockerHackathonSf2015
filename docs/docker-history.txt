
# move downloaded binary file to correct folder

mv docker-machine_darwin-amd64 /usr/local/bin/docker-machine

# set correct permissions for execution on docker-machine binary

chmod +x /usr/local/bin/docker-machine

# create a new master machine 

docker-machine create -d virtualbox machine1
docker-machine ls
docker-machine ssh machine1
docker-machine -v

# get environment

docker-machine env machine1

eval "$(docker-machine env machine1)"



docker info

#re-tag images:

docker tag aaa71f07726b image1
docker tag aaa71f07726b image1/image1
docker tag aaa71f07726b image1:image1
docker tag aaa71f07726b image1:latest
docker images

#remove images

docker rmi image1:image1
docker rmi image1/image1
docker images
docker run  -p 80:80

# run a docker container -d implies "detach" from console

docker run  -p 80:80 -d image1

# show list of running processes

docker ps
docker-machine ip
docker-machine ip 1f4e81191044

# print master ip address

docker-machine ip machine1
docker-machine ls
docker-machine ip machine1
docker-machine ssh machine1
docker ps
docker exec --help

#run commands interactively:

docker exec -i -t pensive_jang bash

docker commit pensive_jang saved-image
docker diff image1 saved-image
docker diff pensive_jang saved-image
docker diff help
docker diff --help

#show differences between previous layer

docker diff saved-image
docker diff pensive_jang
docker exec -i -t pensive_jang bash

#save the machine state:

docker commit pensive_jang saved-image

docker diff pensive_jang
docker ps
docker rm -f pensive_jang
docker images
docker run -it -p 80:80 saved-image bash
docker ps -a
docker run -it -p 80:80 -d saved-image
docker run --name container1 -d -p 80:80 saved-image
docker run --name container1 -d -p 81:80 saved-image
docker run --name container2 -d -p 81:80 saved-image

#save a machine?:

docker save --help
docker-machine --help
docker-machine create
docker-machine create --help
docker-machine create -d digitalocean

# start docker container on digital ocean

docker-machine create -d digitalocean --digitalocean-access-token=xxxx


 docker-machine create -d digitalocean --digitalocean-access-token=xx do

# set this terminal to use this machine:

 eval "$(docker-machine env do)"

# show running machines

 docker ps

#show all machines, running and not running

 docker ps -a
 docker images
 docker-machine ps
 docker-machine ls
 docker-machine ssh

# connect to the machine called "do"

 docker-machine ssh do
 docker run -it -p 80:80 saved-image
 
#create a new docker machine from the Dockerfile

 docker build .

#show a list of images

 docker images
 docker ls

#run bash interactively on container: saved-image exposing port 80 on host and 80 on client
# no tag id means the machine needs to be tagged

 docker run -it -p 80:80 saved-image bash

#tag a machine

 docker tag d944c02bc34c image1:image1

 docker run -d -p 80:80 --name machine1 image1:image1
 docker ps
 docker-machine ip do


# build telnetica

docker build --tag=nice1:nice1 .

